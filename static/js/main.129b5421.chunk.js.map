{"version":3,"sources":["assets/images/calendar.svg","assets/images/filter.svg","utils/dateRangeUtil.js","components/launches/DateRangeSelection.js","components/launches/Filters.js","assets/images/nasa.svg","assets/images/wikipedia.svg","assets/images/youtube.svg","components/launches/MissionInfo.js","components/launches/LaunchesTable.js","components/launches/TablePagination.js","containers/launches/Launches.js","containers/urlFallbackPage/URLFallbackPage.js","Routes.js","assets/images/spacex.svg","App.js","reportWebVitals.js","containers/errorBoundary/ErrorBoundary.js","index.js"],"names":["findActualDate","date","test","Date","moment","add","format","DateRangeSelection","props","handleDynamicDateRangeSelected","index","setState","dateFrom","dynamicDateRangeLabelOptions","dateTo","isCustomActive","handleCustomClicked","handleStaticDateFromChanged","newValue","state","handleStaticDateToChanged","handleResetClicked","handleSaveClicked","handleDateRangeModalClosed","handleDateFromDateToChanged","id","ButtonBase","className","onClick","this","List","map","dateRange","ListItem","button","dense","selected","value","label","Grid","container","item","xs","sm","md","lg","xl","calendarType","showFixedNumberOfWeeks","minDetail","onClickDay","maxDate","minDate","Button","variant","size","color","Component","Filters","launchStatusOptions","getDateRangeLabelText","momentDateFormat","matchedDynamicDateRange","filter","row","length","handleDateRangeModalOpened","isDateRangeSectionModalOpen","src","CalendarSvg","alt","FilteSvg","Select","launchStatusFilter","onChange","event","handleLaunchSuccessFilterChanged","target","itemDetails","MenuItem","Modal","open","onClose","MissionInfo","launchStatusMap","true","false","null","tabularDetails","launchDetails","flight_number","name","rocket","type","payloads","manufacturers","join","nationalities","date_utc","moment_timezone","tz","guess","orbit","launchpad","handleMoalClosed","links","patch","small","success","presskit","window","nasaLogo","wikipedia","wikipediaLogo","webcast","youtubeLogo","details","href","rel","TableContainer","Table","stickyHeader","TableBody","TableRow","TableCell","LaunchesTable","columns","handleRowClicked","selectedIndex","isModalOpen","TableHead","column","isLoading","Array","data","i","Skeleton","animation","width","height","launches","colSpan","align","TablePagination","options","launchesPerPage","handleLaunchesPerPageChanged","number","currentPageNumber","totalNumberOfRecords","Math","min","Pagination","page","count","totalNumberOfPages","shape","newPageNumber","handlePageNumberChanged","Launches","updateStateAsPerQueryParameters","validatedQueryParams","fetchLaunchDetails","params","qs","parse","location","search","areQueryParamsProper","returnState","validateCurrentPageNumber","validateLaunchStatusFilter","launchsuccess","validateLaunchesPerPage","limit","validateDateRanges","datefrom","dateto","changeQueryParams","parseInt","Number","isInteger","includes","dateRegex","isValid","diff","modifyQueryParams","history","replace","stringify","hasOwnProperty","query","axios","method","url","populate","path","select","then","response","totalPages","docs","totalDocs","catch","error","alert","newLaunchSuccessFilter","newLaunchesPerPage","newDateFrom","newDateTo","prevProps","URLFallbackPage","Routes","basename","process","exact","strict","from","to","component","App","SpacexLogo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","hasCaughtError","errorInfo","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129b5421.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/calendar.6009beb8.svg\";","export default __webpack_public_path__ + \"static/media/filter.74f8af36.svg\";","import moment from \"moment\";\n\nfunction findActualDate(date){\n  const dateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/i;\n  if(date===\"all\"){\n    return null;\n  }\n  if(dateRegex.test(date)){\n    return new Date(date);\n  }\n  return new Date(moment().add(date, 'd').format(\"YYYY-MM-DD\"));\n}\n\nexport {findActualDate};","import React, {Component} from \"react\";\nimport {ButtonBase, List, ListItem, Grid, Button} from \"@material-ui/core\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport {findActualDate} from \"../../utils/dateRangeUtil\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./DateRangeSelection.scss\";\n\nclass DateRangeSelection extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      dateFrom: props.dateFrom,\n      dateTo: props.dateTo,\n      isCustomActive: (typeof props.dateFrom===\"string\") && (typeof props.dateTo===\"string\") && (props.dateFrom!==\"all\" || props.dateTo!==\"all\")\n    };\n  }\n\n  handleDynamicDateRangeSelected = (index) => {\n    this.setState({\n      dateFrom: this.props.dynamicDateRangeLabelOptions[index].dateFrom,\n      dateTo: this.props.dynamicDateRangeLabelOptions[index].dateTo,\n      isCustomActive: false\n    });\n  }\n\n  handleCustomClicked = () => {\n    this.setState({\n      isCustomActive: true,\n      dateFrom: \"all\",\n      dateTo: \"all\"\n    });\n  }\n\n  handleStaticDateFromChanged = (newValue) => {\n    let dateTo = this.state.dateTo;\n    if(typeof dateTo !== \"string\"){\n      dateTo = \"all\";\n    }\n    this.setState({\n      dateFrom: moment(newValue).format(\"YYYY-MM-DD\"),\n      dateTo: dateTo,\n      isCustomActive: true\n    });\n  }\n\n  handleStaticDateToChanged = (newValue) => {\n    let dateFrom = this.state.dateFrom;\n    if(typeof dateFrom !== \"string\"){\n      dateFrom = \"all\";\n    }\n    this.setState({\n      dateFrom: dateFrom,\n      dateTo: moment(newValue).format(\"YYYY-MM-DD\"),\n      isCustomActive: true\n    });\n  }\n\n  handleResetClicked = () => {\n    this.setState({\n      dateFrom: \"all\",\n      dateTo: \"all\",\n      isCustomActive: false\n    });\n  }\n\n  handleSaveClicked = () => {\n    this.props.handleDateRangeModalClosed();\n    this.props.handleDateFromDateToChanged(this.state.dateFrom, this.state.dateTo);\n  }\n\n  render(){\n    return(\n      <div id=\"dateRangeSelectionContainer\">\n        <div id=\"headerSection\">\n          <ButtonBase className=\"close\" onClick={this.props.handleDateRangeModalClosed}>X</ButtonBase>\n        </div>\n        <div id=\"bodySection\">\n          <div id=\"dynamicDateRangeContainer\">\n            <List>\n              {\n                this.props.dynamicDateRangeLabelOptions.map((dateRange,index) => (\n                  <ListItem\n                    key={`dynamic_date_range_${index}`}\n                    button\n                    dense\n                    className=\"dynamicDataRangeListItem\"\n                    selected={!this.state.isCustomActive && dateRange.value===`${this.state.dateFrom} to ${this.state.dateTo}`}\n                    onClick={()=>this.handleDynamicDateRangeSelected(index)}\n                  >\n                    {dateRange.label}\n                  </ListItem>\n                ))\n              }\n              <ListItem\n                button\n                dense\n                className=\"dynamicDataRangeListItem\"\n                selected={this.state.isCustomActive}\n                onClick={this.handleCustomClicked}\n              >\n                Custom\n              </ListItem>\n            </List>\n          </div>\n          <div className=\"divider\"></div>\n          <Grid container className={`staticDateRangeContainer ${this.state.isCustomActive?\"\":\"customInactive\"}`}>\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className=\"calendarContainer\">\n              <div className=\"calendarHeading\">\n                Start Date\n              </div>\n              <div className=\"calendarBody\">\n                <Calendar\n                  calendarType=\"US\"\n                  className=\"reactCalendar\"\n                  showFixedNumberOfWeeks={true}\n                  minDetail=\"year\"\n                  onClickDay={(newValue)=>this.handleStaticDateFromChanged(newValue)}\n                  value={findActualDate(this.state.dateFrom)}\n                  maxDate={findActualDate(this.state.dateTo)}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className=\"calendarContainer\">\n              <div className=\"calendarHeading\">\n                End Date\n              </div>\n              <div className=\"calendarBody\">\n                <Calendar\n                  calendarType=\"US\"\n                  className=\"reactCalendar\"\n                  showFixedNumberOfWeeks={true}\n                  minDetail=\"year\"\n                  onClickDay={(newValue)=>this.handleStaticDateToChanged(newValue)}\n                  value={findActualDate(this.state.dateTo)}\n                  minDate={findActualDate(this.state.dateFrom)}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n        <div id=\"footerButttonSection\">\n          <div className=\"actionButtonContainer\">\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={this.props.handleDateRangeModalClosed}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"actionButtonContainer\">\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={this.handleResetClicked}\n            >\n              Reset\n            </Button>\n          </div>\n          <div className=\"actionButtonContainer\" >\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              color=\"primary\"\n              onClick={this.handleSaveClicked}\n            >\n              Save\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DateRangeSelection;","import React, {Component} from \"react\";\nimport { Select, MenuItem, ButtonBase, Modal } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport CalendarSvg from \"../../assets/images/calendar.svg\";\nimport FilteSvg from \"../../assets/images/filter.svg\"\nimport DateRangeSelection from \"./DateRangeSelection\";\nimport \"./Filters.scss\";\n\nclass Filters extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      isDateRangeSectionModalOpen: false\n    };\n  }\n\n  dynamicDateRangeLabelOptions = [\n    {label: \"Past Week\", value: \"-7 to 0\", dateFrom: -7, dateTo: 0},\n    {label: \"Past Month\", value: \"-30 to 0\", dateFrom: -30, dateTo: 0},\n    {label: \"Past 3 Months\", value: \"-90 to 0\", dateFrom: -90, dateTo: 0},\n    {label: \"Past 6 Months\", value: \"-180 to 0\", dateFrom: -180, dateTo: 0},\n    {label: \"Past Year\", value: \"-365 to 0\", dateFrom: -365, dateTo: 0},\n    {label: \"Next Week\", value: \"0 to 7\", dateFrom: 0, dateTo: 7},\n    {label: \"Next Month\", value: \"0 to 30\", dateFrom: 0, dateTo: 30},\n    {label: \"All time\", value: \"all to all\", dateFrom: \"all\", dateTo: \"all\"}\n  ]\n\n  launchStatusOptions = [\n    { label: \"All Launches\", value: \"all\"},\n    { label: \"Upcoming Lauches\", value: \"upcoming\" },\n    { label: \"Successful Launches\", value: \"true\"},\n    { label: \"Failed Lauches\", value: \"false\"}\n  ]\n\n  getDateRangeLabelText = () => {\n    let {dateFrom, dateTo} = this.props;\n    const momentDateFormat = \"Do MMM YYYY\";\n    let matchedDynamicDateRange = this.dynamicDateRangeLabelOptions.filter(row => row.value===`${dateFrom} to ${dateTo}`);\n    if(matchedDynamicDateRange.length === 1){\n      return matchedDynamicDateRange[0].label;\n    }\n    if(dateFrom === \"all\"){\n      return `Before ${moment(dateTo).format(momentDateFormat)}`;\n    }\n    if(dateTo === \"all\"){\n      return `After ${moment(dateFrom).format(momentDateFormat)}`;\n    }\n    return `From ${moment(dateFrom).format(momentDateFormat)} to ${moment(dateTo).format(momentDateFormat)}`;\n  }\n\n  handleDateRangeModalOpened = () => {\n    this.setState({\n      isDateRangeSectionModalOpen: true\n    });\n  }\n\n  handleDateRangeModalClosed = () => {\n    this.setState({\n      isDateRangeSectionModalOpen: false\n    });\n  }\n\n  render(){\n    return(\n      <div id=\"filtersContainer\">\n        <ButtonBase className=\"forDateRangeSelection\" onClick={this.handleDateRangeModalOpened}>\n          <img src={CalendarSvg} alt=\"\" className=\"svgIcon\" />\n          <div>{this.getDateRangeLabelText()}</div>\n          <div id=\"bottomArrow\"></div>\n        </ButtonBase>\n        <div id=\"forSomething\">\n\n        </div>\n        <img src={FilteSvg} alt=\"\" className=\"svgIcon\" />\n        <div id=\"forLaunchStatusDropdown\">\n          <Select\n            value={this.props.launchStatusFilter}\n            onChange={event => this.props.handleLaunchSuccessFilterChanged(event.target.value)}\n            className=\"launchStatusDropdown\"\n          >\n            {\n              this.launchStatusOptions.map((itemDetails, index) => (\n                <MenuItem key={`success_filter_${index}`} value={itemDetails.value}>{itemDetails.label}</MenuItem>\n              ))\n            }\n          </Select>\n        </div>\n        <Modal\n          open={this.state.isDateRangeSectionModalOpen}\n          onClose={this.handleDateRangeModalClosed}\n          className=\"dateRangeModal\"\n        >\n          {\n            !this.state.isDateRangeSectionModalOpen?(\n              <></>\n            ):(\n              <DateRangeSelection\n                handleDateRangeModalClosed={this.handleDateRangeModalClosed}\n                dynamicDateRangeLabelOptions={this.dynamicDateRangeLabelOptions}\n                dateFrom={this.props.dateFrom}\n                dateTo={this.props.dateTo}\n                handleDateFromDateToChanged={this.props.handleDateFromDateToChanged}\n              />\n            )\n          }\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Filters;","export default __webpack_public_path__ + \"static/media/nasa.5762b95e.svg\";","export default __webpack_public_path__ + \"static/media/wikipedia.6f088cfe.svg\";","export default __webpack_public_path__ + \"static/media/youtube.6544010c.svg\";","import React, {Component} from \"react\";\nimport { Table, TableContainer, TableBody, TableRow, TableCell, ButtonBase } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport moment_timezone from \"moment-timezone\";\nimport nasaLogo from \"../../assets/images/nasa.svg\";\nimport wikipediaLogo from \"../../assets/images/wikipedia.svg\";\nimport youtubeLogo from \"../../assets/images/youtube.svg\";\nimport \"./MissionInfo.scss\";\n\nclass MissionInfo extends Component{\n  constructor(props){\n    super(props);\n    this.state={};\n  }\n\n  launchStatusMap = {\n    true: \"success\",\n    false: \"failed\",\n    null: \"upcoming\"\n  };\n\n  tabularDetails = [\n    {\n      label: \"Flight Number\",\n      value: this.props.launchDetails.flight_number\n    },\n    {\n      label: \"Mission Name\",\n      value: this.props.launchDetails.name\n    },\n    {\n      label: \"Rocket Type\",\n      value: this.props.launchDetails.rocket.type\n    },\n    {\n      label: \"Rocket Name\",\n      value: this.props.launchDetails.rocket.name\n    },\n    {\n      label: \"Manufacturer\",\n      value: this.props.launchDetails.payloads[0].manufacturers.join(\", \")\n    },\n    {\n      label: \"Nationality\",\n      value: this.props.launchDetails.payloads[0].nationalities.join(\", \")\n    },\n    {\n      label: \"Launch Date\",\n      value: `${moment(this.props.launchDetails.date_utc).format(\"DD MMMM YYYY\")} at ${moment(this.props.launchDetails.date_utc).format(\"HH:mm zz\")} ${moment_timezone.tz(moment_timezone.tz.guess()).format(\"z\")}`\n    },\n    {\n      label: \"Payload Type\",\n      value: this.props.launchDetails.payloads[0].type\n    },\n    {\n      label: \"Orbit\",\n      value: this.props.launchDetails.payloads[0].orbit\n    },\n    {\n      label: \"Launch Site\",\n      value: this.props.launchDetails.launchpad.name\n    }\n  ];\n\n  render(){\n    let {launchDetails} = this.props;\n    return(\n      <div id=\"missionInfoContainer\">\n        <div id=\"headerSection\">\n          <ButtonBase className=\"close\" onClick={this.props.handleMoalClosed}>X</ButtonBase>\n        </div>\n        <div id=\"bodySection\">\n          <div id=\"mainDetails\">\n            <div id=\"forLogo\">\n              <img src={launchDetails.links.patch.small} alt=\"Mission Logo\" id=\"missionLogo\"/>\n            </div>\n            <div id=\"forMissionHeadings\">\n              <div id=\"line1\">\n                {launchDetails.name}\n                <div className={`launchStatusContainer ${this.launchStatusMap[launchDetails.success]}`}>\n                  {this.launchStatusMap[launchDetails.success]}\n                </div>\n              </div>\n              <div id=\"line2\">\n                {launchDetails.rocket.name}\n              </div>\n              <div id=\"line3\">\n                {\n                  launchDetails.links.presskit &&\n                    <div className=\"iconContainer\" onClick={()=>window.open(launchDetails.links.presskit)}>\n                      <img src={nasaLogo} alt=\"Wikipedia\" className=\"linkIcon\"/>\n                    </div>\n                }\n                <div className=\"iconContainer\" onClick={()=>window.open(launchDetails.links.wikipedia)}>\n                  <img src={wikipediaLogo} alt=\"Wikipedia\" className=\"linkIcon\"/>\n                </div>\n                <div className=\"iconContainer\" onClick={()=>window.open(launchDetails.links.webcast)}>\n                  <img src={youtubeLogo} alt=\"Youtube\" className=\"linkIcon\"/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"description\">\n            {launchDetails.details}\n            <span id=\"descriptionWikipedia\">\n              <a href={launchDetails.links.wikipedia} target=\"_blank\" rel=\"noreferrer\">Wikipedia</a>\n            </span>\n          </div>\n          <TableContainer className=\"tableContainer\">\n            <Table stickyHeader>\n              <TableBody className=\"tableBodyContainer\">\n                {\n                  this.tabularDetails.map((details, index) => (\n                    <TableRow key={`tabular_info_${index}`}>\n                      <TableCell className=\"label\">{details.label}</TableCell>\n                      <TableCell className=\"value\">{details.value}</TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MissionInfo;","import React, {Component} from \"react\";\nimport { Table, TableContainer, TableHead, TableBody, TableRow, TableCell, Modal } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport moment from \"moment\";\nimport moment_timezone from \"moment-timezone\";\nimport MissionInfo from \"./MissionInfo\";\nimport \"./LaunchesTable.scss\";\n\nclass LaunchesTable extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      selectedIndex: -1,\n      isModalOpen: false\n    };\n  }\n\n  columns = [\"No\", `Launched (${moment_timezone.tz(moment_timezone.tz.guess()).format(\"z\")})`, \"Location\", \"Mission\", \"Orbit\", \"Launch Status\", \"Rocket\"];\n  launchStatusMap = {\n    true: \"success\",\n    false: \"failed\",\n    null: \"upcoming\"\n  }\n\n  handleRowClicked = (index) => {\n    this.setState({\n      selectedIndex: index,\n      isModalOpen: true\n    });\n  }\n\n  handleMoalClosed = (index) => {\n    this.setState({\n      isModalOpen: false\n    })\n  }\n\n  render(){\n    return(\n      <div id=\"launchesTableContainer\">\n        <TableContainer className=\"tableContainer\">\n          <Table stickyHeader>\n            <TableHead className=\"tableHeadContainer\">\n              <TableRow>\n                {\n                  this.columns.map((column, index) => (\n                    <TableCell size=\"small\" className=\"tableColumn\" key={`column_${index}`}>{column}</TableCell>\n                  ))\n                }\n              </TableRow>\n            </TableHead>\n            <TableBody className=\"tableBodyContainer\">\n              {\n                this.props.isLoading &&\n                  [...new Array(20)].map((data, i) => (\n                    <TableRow key={`loading_row_${i}`}>\n                      {\n                        this.columns.map(column => (\n                          <TableCell key={`loading_column_${i}_${column}`}>\n                            <Skeleton variant=\"rect\" animation=\"wave\" width={90} height={15} />\n                          </TableCell>\n                        ))\n                      }\n                    </TableRow>\n                  ))\n              }\n              {\n                !this.props.isLoading && this.props.launches.length===0 &&\n                  <TableRow>\n                    <TableCell colSpan={this.columns.length} align=\"center\">No results found</TableCell>\n                  </TableRow> \n              }\n              {\n                !this.props.isLoading &&\n                  this.props.launches.map((launchDetails, index) => (\n                    <TableRow\n                      key={`row_${index}`}\n                      className=\"missionRecord\"\n                      onClick={()=>this.handleRowClicked(index)}\n                    >\n                      <TableCell className=\"tableRowCell\">{launchDetails.flight_number}</TableCell>\n                      <TableCell className=\"tableRowCell\">\n                        {moment(launchDetails.date_utc).format(\"Do MMM YYYY\")} at {moment(launchDetails.date_utc).format(\"HH:mm zz\")}\n                      </TableCell>\n                      <TableCell className=\"tableRowCell\">{launchDetails.launchpad.name}</TableCell>\n                      <TableCell className=\"tableRowCell\">{launchDetails.name}</TableCell>\n                      <TableCell className=\"tableRowCell\">{launchDetails.payloads[0].orbit}</TableCell>\n                      <TableCell className=\"tableRowCell\">\n                        <div className={`launchStatusContainer ${this.launchStatusMap[launchDetails.success]}`}>\n                          {this.launchStatusMap[launchDetails.success]}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"tableRowCell\">{launchDetails.rocket.name}</TableCell>\n                    </TableRow>\n                  ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Modal\n          open={this.state.isModalOpen}\n          onClose={this.handleMoalClosed}\n        >\n          {\n            !this.state.isModalOpen?(\n              <></>\n            ):(\n              <MissionInfo\n                launchDetails={this.props.launches[this.state.selectedIndex]}\n                handleMoalClosed={this.handleMoalClosed}\n              />\n            )\n          }\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default LaunchesTable;","import React, {Component} from \"react\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport {Pagination} from \"@material-ui/lab\";\n\nimport \"./TablePagination.scss\";\n\nclass TablePagination extends Component{\n  constructor(props){\n    super(props);\n    this.state={};\n  }\n\n  options = [10,20,30];\n\n  render(){\n    return(\n      <div id=\"TablePaginationContainer\">\n        <div id=\"forLimit\">\n          Launches per page\n          <Select\n            value={this.props.launchesPerPage}\n            onChange={event => this.props.handleLaunchesPerPageChanged(event.target.value)}\n            className=\"launchPerPageDropdown\"\n          >\n            {\n              this.options.map((number, index) => (\n                <MenuItem key={`limit_filter_${index}`} value={number}>{number}</MenuItem>\n              ))\n            }\n          </Select>\n        </div>\n        <div id=\"forRecordsCountInfo\">\n          Showing {this.props.launchesPerPage * (this.props.currentPageNumber-1) + (this.props.totalNumberOfRecords>0?1:0)} to {Math.min(this.props.launchesPerPage * this.props.currentPageNumber, this.props.totalNumberOfRecords)} of {this.props.totalNumberOfRecords} Launches\n        </div>\n        <div id=\"forPageNavigation\">\n          <Pagination\n            page={this.props.currentPageNumber}\n            count={this.props.totalNumberOfPages}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            onChange={(event, newPageNumber) => this.props.handlePageNumberChanged(newPageNumber)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TablePagination;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport qs from \"query-string\";\nimport moment from \"moment\";\nimport Filters from \"../../components/launches/Filters\";\nimport LaunchesTable from \"../../components/launches/LaunchesTable\";\nimport TablePagination from \"../../components/launches/TablePagination\";\nimport {findActualDate} from \"../../utils/dateRangeUtil\";\nimport \"./Launches.scss\";\n\nclass Launches extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      isLoading: true,\n      launches: [],\n      totalNumberOfPages: 1,\n      currentPageNumber: 1,\n      launchStatusFilter: \"all\",\n      totalNumberOfRecords: 0,\n      launchesPerPage: 10,\n      dateFrom: \"all\",\n      dateTo: \"all\"\n    };\n  }\n\n  componentDidMount(){\n    this.updateStateAsPerQueryParameters();\n  }\n\n  componentDidUpdate(prevProps){\n    if(prevProps.location.search !== this.props.location.search){\n      this.updateStateAsPerQueryParameters();\n    }\n  }\n\n  updateStateAsPerQueryParameters = () => {\n    this.setState({\n      isLoading: true,\n      launches: [],\n      ...this.validatedQueryParams()\n    }, ()=>{\n      this.fetchLaunchDetails();\n    });\n  }\n\n  validatedQueryParams = () => {\n    const params = qs.parse(this.props.location.search);\n    let areQueryParamsProper = true;\n    const returnState = {};\n    [returnState[\"currentPageNumber\"], areQueryParamsProper] = this.validateCurrentPageNumber(params.page, areQueryParamsProper);\n    [returnState[\"launchStatusFilter\"], areQueryParamsProper] = this.validateLaunchStatusFilter(params.launchsuccess, areQueryParamsProper);\n    [returnState[\"launchesPerPage\"], areQueryParamsProper] = this.validateLaunchesPerPage(params.limit, areQueryParamsProper);\n    [returnState[\"dateFrom\"], returnState[\"dateTo\"], areQueryParamsProper] = this.validateDateRanges(params.datefrom, params.dateto, areQueryParamsProper);\n    if(areQueryParamsProper){\n      return returnState;\n    }\n    this.changeQueryParams({\n      page: returnState.currentPageNumber,\n      launchsuccess: returnState.launchStatusFilter,\n      limit: returnState.launchesPerPage,\n      datefrom: returnState.dateFrom,\n      dateto: returnState.dateTo\n    });\n  }\n\n  validateCurrentPageNumber = (currentPageNumber, areQueryParamsProper) => {\n    currentPageNumber = parseInt(currentPageNumber);\n    if(Number.isInteger(currentPageNumber) && currentPageNumber>0){\n      return [currentPageNumber, areQueryParamsProper];\n    }\n    return [1, false];\n  }\n\n  validateLaunchStatusFilter = (launchStatusFilter, areQueryParamsProper) => {\n    const launchStatusFilterSupportedValues = [\"all\", \"upcoming\", \"true\", \"false\"];\n    if(launchStatusFilterSupportedValues.includes(launchStatusFilter)){\n      return [launchStatusFilter, areQueryParamsProper];\n    }\n    return [\"all\", false];\n  }\n\n  validateLaunchesPerPage = (launchesPerPage, areQueryParamsProper) => {\n    const launchesPerPageOptions = [10, 20, 30];\n    launchesPerPage = parseInt(launchesPerPage);\n    if(Number.isInteger(launchesPerPage) && launchesPerPageOptions.includes(launchesPerPage)){\n      return [ launchesPerPage, areQueryParamsProper];\n    }\n    return [10, false];\n  }\n\n  validateDateRanges = (dateFrom, dateTo, areQueryParamsProper) => {\n    const dateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/i;\n    //check whether dates are in valid yyyy-mm-dd format or \"all\"\n    //if in yyyy-mm-dd format, then validate whether its a proper date\n    if(\n      (dateRegex.test(dateFrom) || dateFrom===\"all\")  \n      && (dateRegex.test(dateTo) || dateTo===\"all\")\n    ){\n      if(dateFrom!==\"all\"){\n        if(!moment(dateFrom).isValid()){\n          dateFrom = \"all\";\n          areQueryParamsProper = false;\n        }\n      }\n      if(dateTo!==\"all\"){\n        if(!moment(dateTo).isValid()){\n          dateTo = \"all\";\n          areQueryParamsProper = false;\n        }\n        else if(dateFrom!==\"all\"){\n          //dateTo should be greater than dateFrom\n          if(moment(dateTo).diff(moment(dateFrom),\"days\") < 0){\n            dateTo = \"all\";\n            areQueryParamsProper = false;\n          }\n        }\n      }\n      return [dateFrom, dateTo, areQueryParamsProper];\n    }\n    //if it didn't match to the static date range mentioned above, try to match it with the dynamic ranges\n    else{\n      let supportedDynamicRanges = [\"-7 to 0\", \"-30 to 0\", \"-90 to 0\", \"-180 to 0\", \"-365 to 0\", \"0 to 7\", \"0 to 30\"];\n      if(supportedDynamicRanges.includes(`${dateFrom} to ${dateTo}`)){\n        return [parseInt(dateFrom), parseInt(dateTo), areQueryParamsProper];\n      }\n    }\n    return [\"all\", \"all\", false];\n  }\n\n  changeQueryParams = (modifyQueryParams) => {\n    const params = qs.parse(this.props.location.search);\n    this.props.history.replace(\"/launches?\" + qs.stringify({\n      page: modifyQueryParams.hasOwnProperty(\"page\")? modifyQueryParams.page : params.page,\n      launchsuccess: modifyQueryParams.hasOwnProperty(\"launchsuccess\")? modifyQueryParams.launchsuccess : params.launchsuccess,\n      limit: modifyQueryParams.hasOwnProperty(\"limit\")? modifyQueryParams.limit : params.limit,\n      datefrom: modifyQueryParams.hasOwnProperty(\"datefrom\")? modifyQueryParams.datefrom : params.datefrom,\n      dateto: modifyQueryParams.hasOwnProperty(\"dateto\")? modifyQueryParams.dateto : params.dateto\n    }));\n  }\n\n  fetchLaunchDetails = () => {\n    const query = {};\n    if(this.state.launchStatusFilter!==\"all\"){\n      if(this.state.launchStatusFilter!==\"upcoming\"){\n        query[\"success\"] = this.state.launchStatusFilter;\n      }\n      else{\n        query[\"upcoming\"] = true;\n      }\n    }\n    if(this.state.dateFrom!==\"all\" || this.state.dateTo!==\"all\"){\n      query[\"date_utc\"] = {};\n      if(this.state.dateFrom!==\"all\"){\n        query[\"date_utc\"][\"$gte\"] = findActualDate(this.state.dateFrom);\n\n      }\n      if(this.state.dateTo!==\"all\"){\n        query[\"date_utc\"][\"$lte\"] = findActualDate(this.state.dateTo);\n      }\n    }\n    // query[\"date_utc\"] = {$gte:\"2007-03-21\",$lte:\"2008-08-04\"};\n    axios({\n      method: \"POST\",\n      url: \"https://api.spacexdata.com/v4/launches/query\",\n      data: {\n        query: query,\n        options: {\n          page: this.state.currentPageNumber,\n          limit: this.state.launchesPerPage,\n          populate: [\n            {\n              path: \"launchpad\",\n              select: \"name\"\n            },\n            {\n              path: \"payloads\",\n              select: [\"orbit\", \"manufacturers\", \"nationalities\", \"type\"]\n            },\n            {\n              path: \"rocket\",\n              select: [\"name\", \"type\"]\n            }\n          ]\n        }\n      }\n    })\n      .then(response => {\n        if(response.data.totalPages<this.state.currentPageNumber){\n          this.handlePageNumberChanged(response.data.totalPages);\n          return;\n        }\n        this.setState({\n          launches: response.data.docs,\n          totalNumberOfPages: response.data.totalPages,\n          totalNumberOfRecords: response.data.totalDocs,\n          isLoading: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          launches: [],\n          isLoading: false\n        });\n        alert(\"Unable to get data\");\n      });\n  }\n\n  handlePageNumberChanged = (newPageNumber) => {\n    this.changeQueryParams({\n      page: newPageNumber\n    });\n  }\n\n  handleLaunchSuccessFilterChanged = (newLaunchSuccessFilter) => {\n    this.changeQueryParams({\n      launchsuccess: newLaunchSuccessFilter,\n      page: 1\n    });\n  }\n\n  handleLaunchesPerPageChanged = (newLaunchesPerPage) => {\n    this.changeQueryParams({\n      limit: newLaunchesPerPage\n    });\n  }\n\n  handleDateFromDateToChanged = (newDateFrom, newDateTo) => {\n    this.changeQueryParams({\n      datefrom: newDateFrom,\n      dateto: newDateTo,\n      page: 1\n    });\n  }\n\n  render(){\n    return(\n      <div id=\"launchesContainer\">\n        <div id=\"centerBlock\">\n          <div id=\"forFilters\">\n            <Filters\n              dateFrom = {this.state.dateFrom}\n              dateTo = {this.state.dateTo}\n              handleDateFromDateToChanged = {this.handleDateFromDateToChanged}\n              launchStatusFilter = {this.state.launchStatusFilter}\n              handleLaunchSuccessFilterChanged = {this.handleLaunchSuccessFilterChanged}\n            />\n          </div>\n          <div id=\"forTable\">\n            <LaunchesTable\n              isLoading = {this.state.isLoading}\n              launches = {this.state.launches}\n            />\n          </div>\n          <div id=\"forTablePagination\">\n            <TablePagination\n              currentPageNumber = {this.state.currentPageNumber}\n              totalNumberOfPages = {this.state.totalNumberOfPages}\n              handlePageNumberChanged = {this.handlePageNumberChanged}\n              totalNumberOfRecords = {this.state.totalNumberOfRecords}\n              launchesPerPage = {this.state.launchesPerPage}\n              handleLaunchesPerPageChanged = {this.handleLaunchesPerPageChanged}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Launches;","import React from \"react\";\nimport \"./URLFallbackPage.scss\";\n\nfunction URLFallbackPage(){\n  return(\n    <div id=\"urlFallbackPageContainer\">\n      <div id=\"mainText\">Page not found</div>\n      <br />\n      <div id=\"secondaryText\">\n        Go to <a href=\"/\">Launches page</a>\n      </div>\n    </div>\n  );\n}\n\nexport default URLFallbackPage;","import React from \"react\";\nimport { HashRouter, Redirect, Switch, Route } from 'react-router-dom';\nimport Launches from \"./containers/launches/Launches\";\nimport URLFallbackPage from \"./containers/urlFallbackPage/URLFallbackPage\";\n\nfunction Routes() {\n  return(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Redirect exact strict from=\"/\" to=\"/launches\" />\n        <Route exact path=\"/launches\" component={Launches} />\n        <Route path=\"*\" component={URLFallbackPage} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default Routes;","export default __webpack_public_path__ + \"static/media/spacex.cd28a425.svg\";","import React from \"react\";\nimport Routes from \"./Routes\";\nimport SpacexLogo from \"./assets/images/spacex.svg\"\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div id=\"appContainer\">\n      <div id=\"appHeader\">\n        <img id=\"logoSvg\" src={SpacexLogo} alt=\"SpaceX Logo\"/>\n      </div>\n      <div id=\"appBody\">\n        <Routes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from \"react\";\nimport \"./ErrorBoundary.scss\";\n\nclass ErrorBoundary extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      hasCaughtError: false\n    };\n  }\n\n  componentDidCatch(error, errorInfo){\n    this.setState({\n      hasCaughtError: true\n    });\n  }\n\n  render(){\n    if(this.state.hasCaughtError){\n      return(\n        <div id=\"errorBoundaryContainer\">\n          An unanticipated error occured. We will try to fix it soon\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ErrorBoundary from './containers/errorBoundary/ErrorBoundary';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}